// src/components/Button/Button.scss
@use 'sass:color';
@import '../../styles/variables';
@import '../../styles/mixins';

.button {
  display: inline-flex;
  align-items: center;
  justify-content: center;
  position: relative;
  font-family: $font-family-base;
  font-weight: $font-weight-medium;
  border-radius: $border-radius-md;
  border: none;
  transition: $transition-base;
  cursor: pointer;
  overflow: hidden;
  text-align: center;
  
  // Ensure text remains visible during WebKit tap highlight
  -webkit-tap-highlight-color: transparent;
  
  // Variants
  &--primary {
    background-color: $primary-color;
    color: $light-color;
    
    &:hover:not(:disabled) {
      background-color: color.scale($primary-color, $lightness: -8%);
      transform: translateY(-1px);
      box-shadow: $box-shadow-sm;
    }
    
    &:active:not(:disabled) {
      background-color: color.scale($primary-color, $lightness: -12%);
      transform: translateY(0);
      box-shadow: none;
    }
  }
  
  &--secondary {
    background-color: $secondary-color;
    color: $light-color;
    
    &:hover:not(:disabled) {
      background-color: color.scale($secondary-color, $lightness: -8%);
      transform: translateY(-1px);
      box-shadow: $box-shadow-sm;
    }
    
    &:active:not(:disabled) {
      background-color: color.scale($secondary-color, $lightness: -12%);;
      transform: translateY(0);
      box-shadow: none;
    }
  }
  
  &--accent {
    background-color: $accent-color;
    color: $dark-color;
    
    &:hover:not(:disabled) {
      background-color: color.scale($accent-color, $lightness: -8%);
      transform: translateY(-1px);
      box-shadow: $box-shadow-sm;
    }
    
    &:active:not(:disabled) {
      background-color: color.scale($accent-color, $lightness: -12%);
      transform: translateY(0);
      box-shadow: none;
    }
  }
  
  &--outline {
    background-color: transparent;
    border: 2px solid $primary-color;
    color: $primary-color;
    
    &:hover:not(:disabled) {
      background-color: rgba($primary-color, 0.08);
      transform: translateY(-1px);
    }
    
    &:active:not(:disabled) {
      background-color: rgba($primary-color, 0.12);
      transform: translateY(0);
    }
  }
  
  &--text {
    background-color: transparent;
    color: $primary-color;
    padding-left: $spacing-xs;
    padding-right: $spacing-xs;
    
    &:hover:not(:disabled) {
      background-color: rgba($primary-color, 0.08);
    }
    
    &:active:not(:disabled) {
      background-color: rgba($primary-color, 0.12);
    }
  }
  
  // Sizes
  &--small {
    font-size: 0.875rem;
    padding: $spacing-xs $spacing-md;
    height: 32px;
    min-width: 64px;
    
    &.button--icon-only {
      width: 32px;
      min-width: 32px;
      padding: $spacing-xs;
    }
  }
  
  &--medium {
    font-size: 1rem;
    padding: $spacing-sm $spacing-lg;
    height: 40px;
    min-width: 80px;
    
    &.button--icon-only {
      width: 40px;
      min-width: 40px;
      padding: $spacing-sm;
    }
  }
  
  &--large {
    font-size: 1.125rem;
    padding: $spacing-md $spacing-xl;
    height: 48px;
    min-width: 96px;
    
    &.button--icon-only {
      width: 48px;
      min-width: 48px;
      padding: $spacing-md;
    }
  }
  
  // Shapes
  &--square {
    border-radius: $border-radius-sm;
  }
  
  &--circle {
    border-radius: $border-radius-circle;
  }
  
  // Icon-only buttons
  &--icon-only {
    padding: 0;
    
    .button__icon {
      margin: 0;
    }
  }
  
  // Button group styles
  &--grouped {
    border-radius: 0;
    margin: 0 -1px;  // Negative margin to overlap borders
    position: relative;  // For proper z-index handling
    
    &:hover:not(:disabled) {
      z-index: 1;  // Bring hovered button to front
    }
    
    &:focus {
      z-index: 2;  // Focus should be on top of hover
    }
    
    &.button--outline {
      // Adjust border overlap for outlined buttons
      &:not(:first-child) {
        margin-left: -2px;
      }
    }
  }
  
  &--grouped-start {
    border-top-left-radius: $border-radius-md;
    border-bottom-left-radius: $border-radius-md;
    margin-left: 0;
  }
  
  &--grouped-end {
    border-top-right-radius: $border-radius-md;
    border-bottom-right-radius: $border-radius-md;
    margin-right: 0;
  }
  
  &--full-width {
    width: 100%;
  }
  
  // States
  &:disabled {
    opacity: 0.6;
    cursor: not-allowed;
    pointer-events: none;
  }
  
  &--loading {
    color: transparent !important;
    
    &:hover {
      transform: none !important;
      box-shadow: none !important;
    }
  }
  
  // Loading spinner
  &__loader {
    position: absolute;
    width: 18px;
    height: 18px;
    border: 2px solid rgba(255, 255, 255, 0.3);
    border-radius: 50%;
    border-top-color: $light-color;
    animation: spin 0.8s linear infinite;
    
    .button--outline &,
    .button--text & {
      border: 2px solid rgba($primary-color, 0.3);
      border-top-color: $primary-color;
    }
  }
  
  // Icon styles
  &__icon {
    display: flex;
    align-items: center;
    justify-content: center;
    
    &--start {
      margin-right: $spacing-xs;
    }
    
    &--end {
      margin-left: $spacing-xs;
    }
  }
  
  // Focus styles for accessibility
  @include accessibility-focus;
}

// Loading spinner animation
@keyframes spin {
  to {
    transform: rotate(360deg);
  }
}