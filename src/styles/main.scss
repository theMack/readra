@use './tokens' as tokens;
@use './utilities' as utils;

// Import variables, mixins, and other base styles@use './tokens';@use './mixins';@use './typography';@use './animations';@use './accessibility';
.sr-only {
  @include utils.visually-hidden;
}
.page-wrapper {
  @include utils.container;
}
// Base styles
* {
  box-sizing: border-box;
  margin: 0;
  padding: 0;
}

html, body {
  height: 100%;
  width: 100%;
}

body {
  background-color: tokens.$background-light;
  overflow-x: hidden; // Prevent horizontal scrolling
}

// Default focus states for all interactive elements
a,
button,
input,
select,
textarea,
[tabindex]:not([tabindex="-1"]) {
  &:focus {
    @include utils.focus-outline;
  }
}

// Container classes
.container {
  @include utils.container;
}

.container-sm {
  @include utils.container;
  max-width: 768px;
}

.container-md {
  @include utils.container;
  max-width: 992px;
}

.container-lg {
  @include utils.container;
  max-width: 1200px;
}

// Utility classes

// Display utilities
.d-none {
  display: none !important;
}

.d-block {
  display: block !important;
}

.d-flex {
  display: flex !important;
}

.d-inline {
  display: inline !important;
}

.d-inline-block {
  display: inline-block !important;
}

// Flexbox utilities
.flex-row {
  flex-direction: row !important;
}

.flex-column {
  flex-direction: column !important;
}

.justify-content-start {
  justify-content: flex-start !important;
}

.justify-content-center {
  justify-content: center !important;
}

.justify-content-end {
  justify-content: flex-end !important;
}

.justify-content-between {
  justify-content: space-between !important;
}

.justify-content-around {
  justify-content: space-around !important;
}

.align-items-start {
  align-items: flex-start !important;
}

.align-items-center {
  align-items: center !important;
}

.align-items-end {
  align-items: flex-end !important;
}

.flex-wrap {
  flex-wrap: wrap !important;
}

.flex-nowrap {
  flex-wrap: nowrap !important;
}

.flex-grow-1 {
  flex-grow: 1 !important;
}

// Spacing utilities
@each $size, $value in (
  0: 0,
  1: tokens.$spacing-xs,
  2: tokens.$spacing-sm,
  3: tokens.$spacing-md,
  4: tokens.$spacing-lg,
  5: tokens.$spacing-xl,
  6: tokens.$spacing-xxl
) {
  .m-#{$size} {
    margin: $value !important;
  }
  .mt-#{$size} {
    margin-top: $value !important;
  }
  .mr-#{$size} {
    margin-right: $value !important;
  }
  .mb-#{$size} {
    margin-bottom: $value !important;
  }
  .ml-#{$size} {
    margin-left: $value !important;
  }
  .mx-#{$size} {
    margin-left: $value !important;
    margin-right: $value !important;
  }
  .my-#{$size} {
    margin-top: $value !important;
    margin-bottom: $value !important;
  }
  .p-#{$size} {
    padding: $value !important;
  }
  .pt-#{$size} {
    padding-top: $value !important;
  }
  .pr-#{$size} {
    padding-right: $value !important;
  }
  .pb-#{$size} {
    padding-bottom: $value !important;
  }
  .pl-#{$size} {
    padding-left: $value !important;
  }
  .px-#{$size} {
    padding-left: $value !important;
    padding-right: $value !important;
  }
  .py-#{$size} {
    padding-top: $value !important;
    padding-bottom: $value !important;
  }
}

// Auto margins
.mx-auto {
  margin-left: auto !important;
  margin-right: auto !important;
}

.ml-auto {
  margin-left: auto !important;
}

.mr-auto {
  margin-right: auto !important;
}

// Width and height utilities
.w-100 {
  width: 100% !important;
}

.h-100 {
  height: 100% !important;
}

// Border utilities
.border {
  border: 1px solid tokens.$border-color !important;
}

.border-top {
  border-top: 1px solid tokens.$border-color !important;
}

.border-right {
  border-right: 1px solid tokens.$border-color !important;
}

.border-bottom {
  border-bottom: 1px solid tokens.$border-color !important;
}

.border-left {
  border-left: 1px solid tokens.$border-color !important;
}

.border-0 {
  border: 0 !important;
}

// Border radius
.rounded {
  border-radius: tokens.$border-radius-md !important;
}

.rounded-sm {
  border-radius: tokens.$border-radius-sm !important;
}

.rounded-lg {
  border-radius: tokens.$border-radius-lg !important;
}

.rounded-xl {
  border-radius: tokens.$border-radius-xl !important;
}

.rounded-pill {
  border-radius: tokens.$border-radius-pill !important;
}

.rounded-circle {
  border-radius: 50% !important;
}

// Background colors
.bg-primary {
  background-color: tokens.$primary-color !important;
}

.bg-secondary {
  background-color: tokens.$secondary-color !important;
}

.bg-light {
  background-color: tokens.$background-light !important;
}

.bg-dark {
  background-color: tokens.$background-dark !important;
}

.bg-white {
  background-color: white !important;
}

// Visibility
.visible {
  visibility: visible !important;
}

.invisible {
  visibility: hidden !important;
}

// Other utilities
.overflow-hidden {
  overflow: hidden !important;
}

.overflow-auto {
  overflow: auto !important;
}

.position-relative {
  position: relative !important;
}

.position-absolute {
  position: absolute !important;
}

.position-fixed {
  position: fixed !important;
}

.position-sticky {
  position: sticky !important;
}

// Z-index utilities
.z-0 {
  z-index: 0 !important;
}

.z-10 {
  z-index: 10 !important;
}

.z-50 {
  z-index: 50 !important;
}

.z-100 {
  z-index: 100 !important;
}

.z-max {
  z-index: 9999 !important;
}

// Screen reader only content
.sr-only {
  @include utils.visually-hidden;
}

// Print styling
@media print {
  .no-print {
    display: none !important;
  }
  
  a {
    text-decoration: underline;
  }
  
  body {
    background-color: white;
  }
}